/**
 * Gabber API Reference
 * The Gabber API is a set of APIs that allow you to interact with the Gabber platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { DeleteVoice200Response } from '../model';
import type { GenerateVoiceRequest } from '../model';
import type { ListVoices200Response } from '../model';
import type { UpdateVoiceRequest } from '../model';
import type { Voice } from '../model';
/**
 * VoiceApi - axios parameter creator
 * @export
 */
export declare const VoiceApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a new cloned voice based on the input audio file
     * @summary Clone a voice
     * @param {string} name Name of the new voice
     * @param {string} language Language of the voice (e.g., \\\&#39;en\\\&#39;, \\\&#39;es\\\&#39;, \\\&#39;fr\\\&#39;)
     * @param {File} file Audio file for voice cloning (MP3 format)
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneVoice: (name: string, language: string, file: File, xHumanId?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVoice: (voiceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Generates speech from input text and specified voice
     * @summary Generate voice
     * @param {GenerateVoiceRequest} generateVoiceRequest
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateVoice: (generateVoiceRequest: GenerateVoiceRequest, xHumanId?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVoice: (voiceId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a list of voices
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVoices: (xHumanId?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates a voice based on the input request data
     * @summary Update a voice
     * @param {string} voiceId
     * @param {UpdateVoiceRequest} updateVoiceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateVoice: (voiceId: string, updateVoiceRequest: UpdateVoiceRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VoiceApi - functional programming interface
 * @export
 */
export declare const VoiceApiFp: (configuration?: Configuration) => {
    /**
     * Creates a new cloned voice based on the input audio file
     * @summary Clone a voice
     * @param {string} name Name of the new voice
     * @param {string} language Language of the voice (e.g., \\\&#39;en\\\&#39;, \\\&#39;es\\\&#39;, \\\&#39;fr\\\&#39;)
     * @param {File} file Audio file for voice cloning (MP3 format)
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneVoice(name: string, language: string, file: File, xHumanId?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Voice>>;
    /**
     *
     * @summary Delete a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVoice(voiceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteVoice200Response>>;
    /**
     * Generates speech from input text and specified voice
     * @summary Generate voice
     * @param {GenerateVoiceRequest} generateVoiceRequest
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateVoice(generateVoiceRequest: GenerateVoiceRequest, xHumanId?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<File>>;
    /**
     *
     * @summary Get a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVoice(voiceId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Voice>>;
    /**
     *
     * @summary Get a list of voices
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVoices(xHumanId?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListVoices200Response>>;
    /**
     * Updates a voice based on the input request data
     * @summary Update a voice
     * @param {string} voiceId
     * @param {UpdateVoiceRequest} updateVoiceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateVoice(voiceId: string, updateVoiceRequest: UpdateVoiceRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Voice>>;
};
/**
 * VoiceApi - factory interface
 * @export
 */
export declare const VoiceApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a new cloned voice based on the input audio file
     * @summary Clone a voice
     * @param {string} name Name of the new voice
     * @param {string} language Language of the voice (e.g., \\\&#39;en\\\&#39;, \\\&#39;es\\\&#39;, \\\&#39;fr\\\&#39;)
     * @param {File} file Audio file for voice cloning (MP3 format)
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneVoice(name: string, language: string, file: File, xHumanId?: string, options?: RawAxiosRequestConfig): AxiosPromise<Voice>;
    /**
     *
     * @summary Delete a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVoice(voiceId: string, options?: RawAxiosRequestConfig): AxiosPromise<DeleteVoice200Response>;
    /**
     * Generates speech from input text and specified voice
     * @summary Generate voice
     * @param {GenerateVoiceRequest} generateVoiceRequest
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateVoice(generateVoiceRequest: GenerateVoiceRequest, xHumanId?: string, options?: RawAxiosRequestConfig): AxiosPromise<File>;
    /**
     *
     * @summary Get a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVoice(voiceId: string, options?: RawAxiosRequestConfig): AxiosPromise<Voice>;
    /**
     *
     * @summary Get a list of voices
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVoices(xHumanId?: string, options?: RawAxiosRequestConfig): AxiosPromise<ListVoices200Response>;
    /**
     * Updates a voice based on the input request data
     * @summary Update a voice
     * @param {string} voiceId
     * @param {UpdateVoiceRequest} updateVoiceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateVoice(voiceId: string, updateVoiceRequest: UpdateVoiceRequest, options?: RawAxiosRequestConfig): AxiosPromise<Voice>;
};
/**
 * VoiceApi - object-oriented interface
 * @export
 * @class VoiceApi
 * @extends {BaseAPI}
 */
export declare class VoiceApi extends BaseAPI {
    /**
     * Creates a new cloned voice based on the input audio file
     * @summary Clone a voice
     * @param {string} name Name of the new voice
     * @param {string} language Language of the voice (e.g., \\\&#39;en\\\&#39;, \\\&#39;es\\\&#39;, \\\&#39;fr\\\&#39;)
     * @param {File} file Audio file for voice cloning (MP3 format)
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    cloneVoice(name: string, language: string, file: File, xHumanId?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Voice, any>>;
    /**
     *
     * @summary Delete a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    deleteVoice(voiceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<DeleteVoice200Response, any>>;
    /**
     * Generates speech from input text and specified voice
     * @summary Generate voice
     * @param {GenerateVoiceRequest} generateVoiceRequest
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    generateVoice(generateVoiceRequest: GenerateVoiceRequest, xHumanId?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<File, any>>;
    /**
     *
     * @summary Get a voice
     * @param {string} voiceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    getVoice(voiceId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Voice, any>>;
    /**
     *
     * @summary Get a list of voices
     * @param {string} [xHumanId] When using x-api-key authentication, this header is used to scope requests to a specific human.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    listVoices(xHumanId?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ListVoices200Response, any>>;
    /**
     * Updates a voice based on the input request data
     * @summary Update a voice
     * @param {string} voiceId
     * @param {UpdateVoiceRequest} updateVoiceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VoiceApi
     */
    updateVoice(voiceId: string, updateVoiceRequest: UpdateVoiceRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Voice, any>>;
}
//# sourceMappingURL=voice-api.d.ts.map